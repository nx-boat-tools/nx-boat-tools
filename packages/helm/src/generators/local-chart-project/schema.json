{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "$id": "HelmLocalChartProject",
  "title": "Create a local helm chart project",
  "description": "The `local-chart-project` generator is for creating new project containing a local helm chart.",
  "examples": [
    {
      "command": "nx g @nx-dev-tools/helm:local-chart-project my-project --createValues=true",
      "description": "Create a project named my-project with a local helm chart and a single values file, values.yaml"
    },
    {
      "command": "Create a project named my-project with a local helm chart and two values files, values-dev.yaml and values-prod.yaml",
      "description": "Create a project named my-project with a local helm chart and two values files, values-dev.yaml and values-prod.yaml"
    }
  ],
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the project?",
      "pattern": "^[a-zA-Z].*$"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the project (used for linting)",
      "alias": "t"
    },
    "directory": {
      "type": "string",
      "description": "The directory of the new project.",
      "alias": "dir"
    },
    "standaloneConfig": {
      "type": "boolean",
      "description": "Split the project configuration into `<projectRoot>/project.json` rather than including it inside `workspace.json`."
    },
    "createValues": {
      "type": "boolean",
      "description": "Whether or not to copy the values file from the chart to use for deployment.",
      "default": true
    },
    "environments": {
      "type": "string",
      "description": "A comma seperated list of environments to add values for."
    },
    "runBuildTarget": {
      "type": "string",
      "description": "An optional build target to call before running the helm chart."
    },
    "runResourceName": {
      "type": "string",
      "description": "The name of the resource to port-forward to within minikube)."
    },
    "runHostPort": {
      "type": "number",
      "description": "The host port to use when port-forwarding to minikube."
    },
    "runContainerPort": {
      "type": "number",
      "description": "The container port to use when port-forwarding to minikube."
    }
  },
  "required": ["name"]
}
