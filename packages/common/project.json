{
  "root": "packages/common",
  "sourceRoot": "packages/common/src",
  "projectType": "library",
  "targets": {
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "options": {
        "lintFilePatterns": ["packages/common/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["coverage/packages/common"],
      "options": {
        "jestConfig": "packages/common/jest.config.ts",
        "passWithNoTests": true,
        "coverage": true,
        "coverageReporters": ["cobertura"]
      }
    },
    "build": {
      "executor": "@nrwl/js:tsc",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/packages/common",
        "tsConfig": "packages/common/tsconfig.lib.json",
        "packageJson": "packages/common/package.json",
        "main": "packages/common/src/index.ts",
        "assets": [
          "packages/common/*.md",
          {
            "input": "./packages/common/src",
            "glob": "**/!(*.ts)",
            "output": "./src"
          },
          {
            "input": "./packages/common/src",
            "glob": "**/*.d.ts",
            "output": "./src"
          },
          {
            "input": "./packages/common",
            "glob": "generators.json",
            "output": "."
          },
          {
            "input": "./packages/common",
            "glob": "executors.json",
            "output": "."
          }
        ]
      }
    },
    "updateDependencies": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "if [[ '{args.pathPrefix}' = 'undefined' ]] ; then pathPrefix=''; else pathPrefix='{args.pathPrefix}/'; fi; node ./scripts/update-dependencies.js --root=$PWD --peerVersion='{args.peerVersion}' --excludedRootDeps=guid-typescript,xmlbuilder2 --projectDir=${pathPrefix}packages/common"
      }
    },
    "version": {
      "executor": "@nrwl/workspace:run-commands",
      "outputs": [],
      "options": {
        "command": "if [[ '{args.pathPrefix}' = 'undefined' ]] ; then pathPrefix=''; else pathPrefix='{args.pathPrefix}/'; fi; cd ${pathPrefix}packages/common; npm version {args.to} --git-tag-version=false"
      }
    }
  }
}
